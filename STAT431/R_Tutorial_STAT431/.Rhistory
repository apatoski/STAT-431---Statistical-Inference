# Simulate data and run regression
set.seed(123)
b0 <- 1
b1 <- 1.2
x <- seq(0, 1, length.out=40)
y <- b0 + b1*x + rnorm(40, sd=2)
mod <- lm(y ~ x)
plot(x, y, main="Scatter Plot of Simulated Data", ylab = "y", xlab="x", pch=16)
abline(mod, col="red", lwd=2)
confint(mod)
names(mod)
names(summary(mod))
summary(mod)
names(summary(mod))
summary(mod)$sigma
?read.csv
x <- pi # this assigns the variable x the value π
paste("π is approximately",x) # this concatenates strings separated by spaces
# these two operations do the same thing:
x <- cos(pi) # prefered syntax
x =  cos(pi)
## Setting your working directory
getwd()                # Get your current working directory
setwd("~/TA/STAT471/R_Tutorial_STAT471") # Set working directory (where R will search for files)
# or...
dir <- "~/TA/STAT471/R_Tutorial_STAT471"
setwd(dir)             # pass the string variable dir to setwd()
## Here's an example of how to read in a .csv data file located in your working directory:
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
# comma is default seperator for read.csv: sep=","
# with some different options now
radio=read.csv("Survey_results_final.csv",header=T, stringsAsFactors=F,as.is=T, na.strings="")
## HELP!!! How to get it
?read.csv
??read.csv
help(read.csv)
apropos("read")	#	List all the functions with "read" as part of the function. Very useful!
# google: R: how to import a data set?
# If you pair "R" with some phrase related
# to stats or data google usually does a good job
args(read.csv) # list all the arguments
str(read.csv)  # string representation of read.csv function
# ... both of these show you the defaul arguments (if there are any)
## Packages: what are they and how to install them
install.packages("MASS")    # Many packages available. We only need a few.
library(MASS)       # load package MASS
help(package=MASS)  # get information about MASS
installed.packages()[1:10,1] # packages installed (first 10)
pckgs.all <- available.packages("http://cran.r-project.org/bin/windows/contrib/3.2")
# get all the package with "knn" as part of the name
grep("knn", rownames(pckgs.all), val=T)
# get first 10 packages with "plot" as part of the name
grep("plot", rownames(pckgs.all), val=T )[1:10]
# Cleaning and examining the data
## Quick Check
class(radio)
str(radio) # make sure the variables are correctly defined.
## Get a table view
# If our dataset is not too big, we can graphically inspect the data in an Excel-like table with
View(radio) # note that case matters in R
##	Inspect the first (or last) few rows
head(radio) # or tail(radio), or head(radio,10) -- the first 10 rows
# In this case, the graphical `View()` command is a better option.
## Find the size of the data or the numbers or rows and columns
dim(radio)
## Get the variable names
names(radio)[1:10] # hear we look at only the first 10
## Work with a subset which includes relevant variables
radio1=radio[, c( 24,28:33)] # take columns 24, 28, ... 33
str(radio1)
View(radio1)
head(radio1)
dim(radio1)
summary(radio1)
## rename the varables
names(radio1)
names(radio1)=c("worktime", "age", "education", "gender", "income", "sirius", "wharton")
names(radio1)
str(radio1) # Notice that age is not a continuous variable, why?
## Cleaning up the data: subsetting data
summary(radio1)
levels(radio1$age)
# need to take care of "27`", "Eighteen (18)", "female" and "223"
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
radio1$age=as.numeric(radio1$age)
dim(radio1)
radio1=radio1[!is.na(radio1$sirius),]
radio1=radio1[!(radio1$sirius==""),]
radio1=radio1[!is.na(radio1$wharton),]
radio1=radio1[!(radio1$wharton==""),]
dim(radio1)
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
Work with a subset which includes relevant variables
radio1=radio[, c( 24,28:33)] # take columns 24, 28, ... 33
str(radio1)
View(radio1)
head(radio1)
dim(radio1)
summary(radio1)
# need to take care of "27`", "Eighteen (18)", "female" and "223"
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
names(radio1)
names(radio1)=c("worktime", "age", "education", "gender", "income", "sirius", "wharton")
names(radio1)
str(radio1) # Notice that age is not a continuous variable, why?
# need to take care of "27`", "Eighteen (18)", "female" and "223"
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
radio1$age=as.numeric(radio1$age)
dim(radio1)
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
# comma
radio1=radio[, c( 24,28:33)] # take columns 24, 28, ... 33
str(radio1)
View(radio1)
head(radio1)
dim(radio1)
summary(radio1)
## rename the varables
names(radio1)
names(radio1)=c("worktime", "age", "education", "gender", "income", "sirius", "wharton")
names(radio1)
str(radio1) #
class(radio1$age)
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
radio1$age=as.numeric(radio1$age)
dim(radio1)
summary(radio1$age)
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
# comma is default s
radio1=radio[, c( 24,28:33)] # take columns 24, 28, ... 33
str(radio1)
View(radio1)
head(radio1)
dim(radio1)
summary(radio1)
## rename the varables
names(radio1)
names(radio1)=c("worktime", "age", "education", "gender", "income", "sirius", "wharton")
names(radio1)
str(radio1)
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
radio1$age=as.character(radio1$age)
radio1$age=as.numeric(radio1$age)
summary(radio1$age)
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
# comma is default seperator for read.csv: sep=","
# with some different options now
radio=read.csv("Survey_results_final.csv",header=T, stringsAsFactors=F,as.is=T, na.strings="")
radio=read.csv("Survey_results_final.csv", header=T, na.strings="")
# c
radio1=radio[, c( 24,28:33)] # take columns 24, 28, ... 33
names(radio1)=c("worktime", "age", "education", "gender", "income", "sirius", "wharton")
need to take care of "27`", "Eighteen (18)", "female" and "223"
radio1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
levels(radio1$age)
io1$age[radio1$age == "27`"] <- 27
radio1$age[radio1$age == "Eighteen (18)"] <- 18
radio1$age[radio1$age == "female"] <- NA
levels(radio1$age)
?as.numeric
as.numeric(factor(5:10))
factor(c("a","b"))
factor(c("a","b","c","d","e","f"))
as.numeric(factor(c("a","b","c","d","e","f")))
rm(list=ls())
clear
radio1$age[1]
x <- data.frame(y=c(1:10))
x$y
x${names(x)[1]}
x$names(x)[1]
x$(names(x)[1])
x[,names(x)[1]]
