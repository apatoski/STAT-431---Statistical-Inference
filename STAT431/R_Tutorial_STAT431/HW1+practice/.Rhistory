# install knitr so that we can compile the lecture notes
install.packages("knitr")
getwd()
knitr::opts_chunk$set(cache=TRUE)
View(radio) # note that case matters in R
knitr::opts_chunk$set(cache=TRUE)
# This is a comment
x <- pi # this assigns the variable x the value π
paste("π is approximately",x) # this concatenates strings separated by spaces
# these two operations do the same thing:
x <- cos(pi) # prefered syntax
x =  cos(pi)
getwd()                # Get your current working directory
setwd("~/TA/STAT471/R_Tutorial_STAT471") # Set working directory (where R will search for files)
knitr::opts_chunk$set(cache=TRUE)
# This is a comment
x <- pi # this assigns the variable x the value π
paste("π is approximately",x) # this concatenates strings separated by spaces
# these two operations do the same thing:
x <- cos(pi) # prefered syntax
x =  cos(pi)
getwd()                # Get your current working directory
setwd("~/TA/STAT471/R_Tutorial_STAT471") # Set working directory (where R will search for files)
?read.table
?read.table
view(df)
View(df)
View(Old_Faithful)
View(mydata)
mydata = read.csv("oldfaithful.txt", header = TRUE,
dec="  ", row.names="id")
View(mydata)
mydata
mydata
radio
oldfaithful <- read.delim("C:/Users/andre/OneDrive/Desktop/STAT 431 HW/R_Tutorial_STAT431/HW1+practice/oldfaithful.txt")
View(oldfaithful)
boxplot(timenext, data=X.Timenext)
boxplot(data=X.Timenext)
boxplot(data=X.Timenext.)
boxplot(oldfaithful, data=X.Timenext.)
boxplot(oldfaithful, data=X.Timenext)
boxplot(oldfaithful, data=x.Timenext)
read.delim("oldfaithful.txt", header = TRUE)
variable <- boxplot(oldfaithful, data=x.Timenext)
sheight <- father.son$sheight
variable <- boxplot(oldfaithful, data=x.Timenext)
sheight <- father.son$sheight
getwd
getwd()
father.son <- read.table("pearson.txt", sep=" ")[,-1]
## Scatter plot of fheight vs. sheight
## Note that we are calling the column names of the data frame directly here
plot(fheight, sheight)
fheight <- father.son$fheight
View(father.son)
View(data.volcano)
View(data.volcano)
data.volcano = read.delim("oldfaithful.txt", header = TRUE, sep = "\t")
View(data.volcano)
boxplot(data.volcano)
boxplot(data.volcano$X.Timenext.)
boxplot(data.volcano$X.Timenext., main ="Time until next eruption", ylab = "Number of days")
hist(data.volcano$X.Timenext.)
hist(data.volcano$X.Timenext., breaks=15)
hist(data.volcano$X.Timenext., breaks=25)
hist(data.volcano$X.Timenext., breaks = 5)
hist(data.volcano$X.Timenext., breaks=30)
View(info.height)
info.height <- read.delim("stat431height.txt", sep = "\t")
View(info.height)
hist(info.height)
hist(info.height$height)
hist(males)
males <- subset(info.height, gender = M)
?subset
boxplot(males)
males <- subset(info.height, info.height$gender = M)
hist(males)
View(males)
males = subset(info.height, gender == F)
View(males)
males = subset(info.height, gender == F)
View(males)
hist(info.height$height)
View(Males)
View(males)
tapply(info.height$height, info.height$gender, mean)
View(means)
View(Mus)
tapply(info.height$height, info.height$gender, sd)
sd(info.height)
sd(info.height)
sd(tallness)
sd(tallness)
sd(tallness, na.rm = FALSE)
sd(info.height, na.rm = FALSE)
SD(info.height$height, na.rm = FALSE)
sd(info.height$height, na.rm = FALSE)
sd(info.height$height, na.rm = FALSE)
> sd(info.height$height, na.rm = TRUE)
tapply(info.height$height, info.height$gender, hist)
tapply(info.height$height, info.height$gender, boxplot)
boxplot(info.height$height)
View(mazi.inf)
setwd("C:/Users/andre/OneDrive/Desktop/STAT 431 HW/R_Tutorial_STAT431/HW1+practice")
plot(mazi.inf$X.Height. , mazi.inf$X.HeadCirc.)
tble<-read.delim("physical.txt",sep = "\t")
plot(X.HeadCirc. ~ X.Height., data = tble, xlab="height", ylab = "head circ.")
corelation<-cor(tble$X.Height.,tble$X.HeadCirc.)
corelation
> plot (X.HeadCirc. ~X.Height. , data = tble[tble$X.Sex.=="'Male'",] , xlab = "height" , ylab = "head cir" , main =
"males")
> plot (X.HeadCirc. ~X.Height. , data = tble[tble$X.Sex.=="'Male'"] , xlab = "height" , ylab = "head cir" , main = "males")
plot (X.HeadCirc. ~X.Height. , data = tble[tble$X.Sex.=="'Male'"] , xlab = "height" , ylab = "head cir" , main = "males")
plot (X.HeadCirc. ~X.Height. , data = tble[tble$X.Sex.=="'Male'",] , xlab = "height" , ylab = "head cir" , main = "males")
plot (X.HeadCirc. ~X.Height. , data = tble[tble$X.Sex.=="'Female'",] , xlab = "height" , ylab = "head cir" , main = "females")
orre.male <- cor(tble[tble$X.Sex.=="'Male'"),"X.Height."], tble[tble$X.Sex.=="'Male'"),"X.HeadCirc."])
corre.male
corre.male <- cor(tble[tble$X.Sex.=="'Male'"),"X.Height."], tble[tble$X.Sex.=="'Male'"),"X.HeadCirc."])
corre.male <- cor(tble[tble$X.Sex.=="'Male'","X.Height."], tble[tble$X.Sex.=="'Male'"),"X.HeadCirc."])
corre.male <- cor(tble[tble$X.Sex.=="'Male'","X.Height."], tble[tble$X.Sex.=="'Male'"),"X.HeadCirc."])
corre.male <- cor(tble[tble$X.Sex.=="'Male'","X.Height."], tble[tble$X.Sex.=="'Male'","X.HeadCirc."])
corre.male
corre.female <- cor(tble[tble$X.Sex.=="'Female'","X.Height."], tble[tble$X.Sex.=="'Female'","X.HeadCirc."])
corre.female
plot(X.HeadCirc. ~ X.Height. , data = tble[tble$X.Sex.=="'Male'",], xlab = "height" , ylab = "head cir", col = "red")
plot(X.HeadCirc. ~ X.Height. , data = tble[tble$X.Sex.=="'Male'",], xlab = "height" , ylab = "head cir", col = "red")
points(X.HeadCirc. ~ X.Height. , data = tble[tble$X.Sex.=="'Female'",], col = "yellow")
points(X.HeadCirc. ~ X.Height. , data = tble[tble$X.Sex.=="'Female'",], col = "blue")
k<-5
k.simul<-500
y.sample<-sample(x=0:5, size = k*k.simul, replace = TRUE, prob = c(0.5,0.2,0.1,0.1,0.05,0.05))
y.sample<-matrix(y.sample, ncol = k)
y.xbar <-apply(y.sample, MARGIN = 1, FUN = mean)
hist(y.xbar, breaks = 20, xlab = expression(bar(X)))
k<-5
k.simul<-500
y.sample<-sample(x=0:5, size = k*k.simul, replace = TRUE, prob = c(0.5,0.2,0.1,0.1,0.05,0.05))
y.sample<-matrix(y.sample, ncol = k)
y.xbar <-apply(y.sample, MARGIN = 1, FUN = mean)
hist(y.xbar, breaks = 20, xlab = expression(bar(X)))
k<-5
k.simul<-500
y.sample<-sample(x=0:5, size = k*k.simul, replace = TRUE, prob = c(0.5,0.2,0.1,0.1,0.05,0.05))
y.sample<-matrix(y.sample, ncol = k)
y.xbar <-apply(y.sample, MARGIN = 1, FUN = mean)
hist(y.xbar, breaks = 20, xlab = expression(bar(X)))
mnn.xbar
sd.xbar
mnn.xbar<- mean(y.xbar)
sd.xbar<-sd(w.xbar)
mnn.xbar
sd.xbar
mnn.xbar<- mean(y.xbar)
sd.xbar<-sd(y.xbar)
mnn.xbar
sd.xbar
